<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.3" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" attributes="0">
              <EmptySpace pref="747" max="32767" attributes="0"/>
              <Component id="jButtonCloseHelp" min="-2" max="-2" attributes="0"/>
              <EmptySpace max="-2" attributes="0"/>
          </Group>
          <Component id="jScrollPane1" alignment="0" max="32767" attributes="0"/>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <Component id="jScrollPane1" min="-2" pref="597" max="-2" attributes="0"/>
              <EmptySpace max="-2" attributes="0"/>
              <Component id="jButtonCloseHelp" min="-2" max="-2" attributes="0"/>
              <EmptySpace max="32767" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JScrollPane" name="jScrollPane1">
      <AuxValues>
        <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
      </AuxValues>

      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
      <SubComponents>
        <Component class="javax.swing.JTextArea" name="jTextAreaHelpText">
          <Properties>
            <Property name="columns" type="int" value="20"/>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="SansSerif" size="14" style="0"/>
            </Property>
            <Property name="lineWrap" type="boolean" value="true"/>
            <Property name="rows" type="int" value="5"/>
            <Property name="text" type="java.lang.String" value="TideMiner Help&#xa;&#xa;TideMiner is a single-task program. It takes a file of tide elevations as generated by the NOAA site and a set of elevations (one per line - manually entered or pasted in from a spreadsheet) and calculates the amount of time each of those elevations has been submerged. The results of that analysis are presented as tab-delimited text suitable for copy-pasting into Excel or whatever you preferred spreadsheet program is, and can also be saved as a .tab file.&#xa;&#xa;The format of the NOAA files looks something like:&#xa;&#xa;    Date Time, Water Level, Sigma, O, F, R, L, Quality &#xa;    2014-09-24 00:00,2.236,0.007,0,0,0,0,v&#xa;    2014-09-24 00:06,2.291,0.007,0,0,0,0,v&#xa;    2014-09-24 00:12,2.331,0.003,0,0,0,0,v&#xa;&#xa;and TideMiner only actually cares about the first two data elements of each line (e.g. 2014-09-24 00:00 and 2.236 for the first of the data lines above). Non-data lines (blanks, headings, or anything else the program can read) are silently skipped. The key aspects of this format are&#xa;   - the time is in the form of &apos;YYYY-MM-DD HH:MI&apos; (Excel format code is yyyy-mm-dd hh:mm)&#xa;   - the time is separated by a comma from the elevation&#xa;   - the elevation is given as a decimal number&#xa;   - one time-elevation pair per line&#xa;   - file name ends in .csv&#xa;While TideMiner is designed to work with the data from NOAA, you can construct your own tide elevation files as long as the formatting constraints are met.&#xa;&#xa;The elevations for which flood duration are to be calculated are entered one per box - this means that a given analysis can only check up to 12 elevations at a time. The analysis silently skips any elevation that it cannot read - if you&apos;re having problems in this area double check your elevation numbers (e.g. make sure your decimal markers are periods and not commas, make sure the minus sign preceds the decimal for a negative elevation, make sure there are zeroes and not o&apos;s, etc.).&#xa;&#xa;The system TideMiner uses for analysis is:&#xa;1. convert the tide elevation entries into a series of intervals, each with a start and end time and a duration&#xa;2. run through the intervals, and for each one check each elevation&#xa;3. if the interval heights are all above the elevation, increase the elevation&apos;s flood duration, otherwise&#xa;4. if the interval spans the elevation, increase the elevations duration by an appropriate fraction of the interval&apos;s duration, toggle the elevations flood state, and if necessary increment its flood count&#xa;&#xa;For &apos;appropriate fraction&apos; above, that&apos;s most easily explained by example. Imagine an interval with a start height of 1, and end height of 5, and a duration of 8. If this interval is checked against an elevation of 2 then we use the interval height span of 4 and the elevation-interval max difference of 3 (= 5 - 2) to get a fraction of 3/4, which is multiplied by the interval duration of 8 to get 6. That 6 is then added to the elevation&apos;s flood duration.&#xa;&#xa;Essentially, the program models a straight, smooth transition between the begin and end height of each interval and interpolates the duration of intermediate values."/>
            <Property name="wrapStyleWord" type="boolean" value="true"/>
          </Properties>
        </Component>
      </SubComponents>
    </Container>
    <Component class="javax.swing.JButton" name="jButtonCloseHelp">
      <Properties>
        <Property name="text" type="java.lang.String" value="Close"/>
      </Properties>
      <Events>
        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButtonCloseHelpActionPerformed"/>
      </Events>
    </Component>
  </SubComponents>
</Form>
